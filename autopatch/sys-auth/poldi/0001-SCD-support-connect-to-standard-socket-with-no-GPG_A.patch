From db136a8aa1317d8807150d3e9f045a5c1fd5197d Mon Sep 17 00:00:00 2001
From: Marc-Antoine Perennou <Marc-Antoine@Perennou.com>
Date: Sun, 12 Jun 2016 21:33:20 +0200
Subject: [PATCH] SCD: support connect to standard socket with no
 GPG_AGENT_INFO

Signed-off-by: Marc-Antoine Perennou <Marc-Antoine@Perennou.com>
---
 src/scd/scd.c | 51 +++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 51 insertions(+)

diff --git a/src/scd/scd.c b/src/scd/scd.c
index 52a64f4..4a1cabc 100644
--- a/src/scd/scd.c
+++ b/src/scd/scd.c
@@ -38,6 +38,7 @@
 #include "scd.h"
 #include "assuan.h"
 #include "util/util.h"
+#include "util/filenames.h"
 #include "util/membuf.h"
 #include "util/support.h"
 #include "util/simplelog.h"
@@ -240,6 +241,37 @@ get_scd_socket_from_agent (const char *agent_infostr, char **socket_name,
   return rc;
 }
 
+/* Retrieve SCDaemons socket name through a running gpg-agent, which
+   is to be found at the standard socket location.  On Success,
+   *SOCKET_NAME contains a copy of the socket name.  Returns proper
+   error code or zero on success.  */
+static int
+get_scd_socket_from_standard_location (char **socket_name,
+			               log_handle_t loghandle)
+{
+  assuan_context_t ctx;
+  char socket_path[34]; /* "/run/user/65535/gnupg/S.gpg-agent" size */
+  int rc;
+
+  *socket_name = NULL;
+  ctx = NULL;
+
+  sprintf(socket_path, "/run/user/%d/gnupg/S.gpg-agent", getuid());
+
+  rc = assuan_socket_connect (&ctx, socket_path, 0);
+
+  if (rc)
+    goto out;
+
+  rc = agent_scd_getinfo_socket_name (ctx, socket_name, loghandle);
+
+ out:
+
+  assuan_disconnect (ctx);
+
+  return rc;
+}
+
 /* Send a RESTART to SCDaemon.  */
 static void
 restart_scd (scd_context_t ctx)
@@ -323,6 +355,25 @@ scd_connect (scd_context_t *scd_ctx,
 
   if (1)
     {
+      char *scd_socket;
+
+      rc = get_scd_socket_from_standard_location (&scd_socket, loghandle);
+      if (!rc)
+        rc = assuan_socket_connect (&assuan_ctx, scd_socket, 0);
+
+      if (!rc)
+	log_msg_debug (loghandle,
+		       _("got scdaemon socket from standard location, "
+			 "connected to socket '%s'"), scd_socket);
+
+      xfree (scd_socket);
+
+      if (!rc)
+        goto out;
+    }
+
+  if (1)
+    {
       /* Neither of the above scdaemon connect methods worked,
 	 fallback: spawn a new scdaemon.  */
 
-- 
2.9.0

